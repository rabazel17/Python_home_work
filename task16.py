#     Первая задача:
# Задаем длину списка наполненного рандомными числами от 1 до 100.
# Вводим искомое число X
# Программа должна вывести в консоль сколько раз встречается в заданном списке искомое число X,
# которое мы вводим с клавиатуры, либо выводим на экран, максимально близкое ему по значению

    

# import random
# list_1 = int(input('Введите длину списка '))
# number = int(input('Введите число '))
# random_list_1 = [random.randint(1,10) for _ in range(list_1)]
# print(f'Список: {random_list_1}')
# print(f'Число: {number} in list_1 = {random_list_1.count(number)}')





# Задача 22:
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются
# в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы
# множеств






mol = [int(x) for x in input().split()]
n = mol[0]
m = mol[1]
set_1 = set()
set_2 = set()
list_1 = list()
a = [int(x) for x in input().split()]
k = set(a)
for i in k:
 set_1.add(i)
b = [int(x) for x in input().split()]
k1 = set(b)
for i in k1:
 set_2.add(i)
lok = set_1 & set_2
kool = list(lok)
kool.sort()
for i in kool:
 print(i, end=' ')
 

# Задача 24
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой
# грядке, причем кусты высажены только по окружности. Таким образом, у каждого
# куста есть ровно два соседних. Всего на грядке растет N кустов.
# Семинар 4 2
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.


n = int(input())
a = list(map(int, input().split()))

maxsum = 0

for i in range(n):
	cursum = sum(a[i:i+3])
	if cursum > maxsum:
		maxsum = cursum
if a[0] + a[-1] + a[-2] > maxsum:
	maxsum = a[0] + a[-1] + a[-2]
if a[0] + a[1] + a[-1] > maxsum:
	maxsum = a[0] + a[1] + a[-1]

print(maxsum)


Задача 26:  Напишите программу, которая на вход принимает два числа A и B, и возводит число А в целую степень B с помощью рекурсии.

*Пример:*

A = 3; B = 5 -> 243 (3⁵)
    A = 2; B = 3 -> 8 




 Задача 28: Напишите рекурсивную функцию sum(a, b), возвращающую сумму двух целых неотрицательных чисел. Из всех арифметических операций допускаются только +1 и -1. Также нельзя использовать циклы.

*Пример:*

2 2
    4    